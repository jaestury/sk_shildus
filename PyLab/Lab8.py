# 비트와 쉬프트 연산자
# 내부적으로는 2인수로 연산을 하고 결과는 10진수로 리턴한다.
# and or not => 기호로 변경해서 사용. 

data1 = 80 # 0101 0000
data2 = 60 # 0011 1100

# 비트 연산
bitResult1 = data1 & data2
# 둘 다 1이여야 1. 0001 0000
bitResult2 = data1 | data2 # | <- 엔지니어는 파이프. 개발자는 or 기호라고 생각하면 됨. 
# 둘 중 하나라도 1이면 1. 0111 1100
bitResult3 = data1 ^ data2
# 둘 중 하나만 1이여야. 0110 1100
bitResult4 = ~data1
# 0은 1로, 1은 0으로 변경. 보수 연산 
# 1010 1111. 음수가 나오는 이유는 양/음수도 반대로 바뀌기 때문.

# 쉬프트 연산
# 비트 연산이지만, 엄밀하게 말하면 Shift(쉬프트) 연산
# 10진수 값을 2진수로 변경 후 왼쪽이나 오른쪽으로 이동하는 방법. 

shiftResult1 = data1 << 2
# 왼쪽으로 주어진 숫자만큼 이동
shiftResult2 = data1 >> 2
# 오른쪽으로 주어진 숫자만큼 이동

temp = 1